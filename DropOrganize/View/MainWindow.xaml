<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:DropOrganize.View" 
        xmlns:prop="clr-namespace:DropOrganize.Properties" 
        xmlns:cvt="clr-namespace:DropOrganize.Converters" 
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:vm="clr-namespace:DropOrganize.ViewModel"
    xmlns:gif="http://wpfanimatedgif.codeplex.com"
    x:Name="mainWindow" x:Class="DropOrganize.View.MainWindow"
    mc:Ignorable="d" Height="150" Width="150" ResizeMode="NoResize" ShowInTaskbar="False" WindowStyle="None"
    Topmost="{Binding Path=Topmost,Source={x:Static prop:Settings.Default},Mode=TwoWay}"
    Left="{Binding Path=LocationLeft,Source={x:Static prop:Settings.Default},Mode=TwoWay}"
    Top="{Binding Path=LocationTop,Source={x:Static prop:Settings.Default},Mode=TwoWay}" 
    AllowsTransparency="True" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Title="drag" AllowDrop="True">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <cvt:ExecuteModeToString x:Key="ExecuteModeToString"/>
        <ContextMenu x:Key="rightClickMenu">
            <MenuItem x:Name="TestItem" Header="Test" Click="TestItem_Click"/>
            <MenuItem x:Name="enabledWinItem" Header="启用悬浮窗" IsCheckable="True" IsChecked="{Binding WinVisibility, Mode=TwoWay, Source={x:Static prop:Settings.Default}}"/>
            <MenuItem x:Name="defaultLocationItem" Header="恢复默认位置" Command="{Binding DefaultLocationCommand}"/>
            <MenuItem x:Name="openSettingItem" Header="设置" Command="{Binding OpenSettingsWinCommand}"/>
            <Separator/>
            <MenuItem x:Name="exitItem" Header="退出" Command="{Binding ExitCommand}"/>
        </ContextMenu>
    </Window.Resources>
    <Window.Visibility>
        <Binding Converter="{StaticResource BooleanToVisibilityConverter}"
                 Mode="TwoWay" Path="WinVisibility" Source="{x:Static prop:Settings.Default}"/>
    </Window.Visibility>
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="PreviewMouseWheel">
            <Behaviors:InvokeCommandAction Command="{Binding ToggleRuleCommand }" PassEventArgsToCommand="True"/>
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Drop">
            <Behaviors:InvokeCommandAction Command="{Binding DropCommand }" PassEventArgsToCommand="True"/>
        </Behaviors:EventTrigger>
    </Behaviors:Interaction.Triggers>
    <Border ContextMenu="{StaticResource rightClickMenu}">
        <Grid>
            <!--
            <Label FontSize="15" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Label.Content>
                    <Binding Converter="{StaticResource ExecuteModeToString}"
                 Mode="OneWay" Path="ExecuteMode" Source="{x:Static prop:Settings.Default}"/>
                    
                </Label.Content>
            </Label>
            -->
            <Image gif:ImageBehavior.AnimatedSource="/Resources/wait.gif"/>
            <tb:TaskbarIcon x:Name="taskbarIcon" Visibility="Visible" IconSource="/taskbar.ico" ToolTipText="DropOrganize">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="启用悬浮窗" IsCheckable="True" IsChecked="{Binding WinVisibility, Mode=TwoWay, Source={x:Static prop:Settings.Default}}"/>
                        <MenuItem Header="恢复默认位置" Command="{Binding DefaultLocationCommand}"/>
                        <MenuItem Header="设置" Command="{Binding OpenSettingsWinCommand}"/>
                        <Separator/>
                        <MenuItem Header="退出" Command="{Binding ExitCommand}"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>
        </Grid>

    </Border>
</Window>
